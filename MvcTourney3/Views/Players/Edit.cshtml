@model MvcTourney3.Models.Player

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Player</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                @*for making dropdown menus that reference other tables, the entire next select tag*@
                <label asp-for="TeamId" class="control-label"></label>
                @*this is an html attribute that directs the name variable input back to the BIND command in the Player controller, which bounces it to the Table column also called "TeamId"*@
                <select name="TeamId">
                    @*team here is a C# variable that iterates through the viewbag*@
                    @foreach(var team in ViewBag.Team)
                    {
                        @*this makes a dropdown menu of the items in ViewBag, each option has an ID which only the computer sees, and a name that the computer shows the user*@
                        @*there is an if statement in the dropdown menu here, it checks to see if the current teamID(Model.TeamID) is the same as anything in the dropdown menu. if it IS, the menu starts on that option. The question mark is a ternary statement that acts as an if statement. first thing after the ? in quote is for TRUE case, second thing in quotes is the FALSE case. Exclaimation before the option tag keeps option from being a "helper" tag*@
                        <!option value="@team.Id" @(team.Id == Model.TeamId ?"selected":"")>@team.Name</!option>
                    }
                </select>
                <span asp-validation-for="TeamId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
